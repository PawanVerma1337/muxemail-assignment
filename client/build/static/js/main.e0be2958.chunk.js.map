{"version":3,"sources":["api/api.js","components/Header.js","components/Footer.js","components/Layout.js","pages/HomePage.js","components/Store.js","pages/Store.js","pages/StoreAddFieldsForm.js","pages/CustomerAddForm.js","App.js","index.js"],"names":["axios","defaults","baseURL","instance","create","Header","useState","store","setStore","val","setVal","useEffect","a","api","get","result","data","to","pathname","AppBar","position","color","Toolbar","style","flexGrow","FormControl","width","InputLabel","id","Select","labelId","value","onChange","event","target","label","MenuItem","map","element","_id","name","Footer","Container","maxWidth","Layout","children","Fragment","CssBaseline","height","maxHeight","useStyles","makeStyles","theme","root","padding","HomePage","classes","backgroundColor","textAlign","className","Typography","variant","gutterBottom","Store","useParams","fields","setFields","console","log","component","List","index","ListItem","button","ListItemText","type","margin","fieldReducer","state","action","field","update","splice","StoreAddFieldsForm","useReducer","setField","saveFields","post","forEach","ele","Grid","container","item","xs","TextField","fullWidth","InputProps","disableUnderline","placeholder","helperText","prevState","Button","borderRadius","onClick","ListItemSecondaryAction","IconButton","edge","aria-label","e","CustomerAddForm","form","setForm","handleFormChange","onSubmit","preventDefault","noValidate","autoComplete","align","justify","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0be2958.chunk.js","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = 'http://localhost:5000/api/v1'\n\nconst instance = axios.create()\n\nexport default instance\n","import React, { useState, useEffect } from 'react'\nimport {\n    AppBar,\n    Toolbar,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@material-ui/core'\nimport { Redirect } from 'react-router-dom'\nimport api from '../api/api'\n\nconst Header = () => {\n    const [store, setStore] = useState([])\n\n    const [val, setVal] = useState('')\n\n    const handleChange = (event) => {\n        setVal(event.target.value)\n    }\n\n    useEffect(async () => {\n        const result = await api.get('/store')\n        setStore(result.data)\n    }, [])\n\n    if (val !== '') {\n        return <Redirect to={{ pathname: `/store/${val}` }} />\n    }\n    return (\n        <header>\n            <AppBar position=\"static\" color=\"primary\">\n                <Toolbar>\n                    <h3 style={{ flexGrow: '1' }}>Store </h3>\n                    <FormControl style={{ width: '150px' }}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                            Store\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={val}\n                            onChange={handleChange}\n                            label=\"Store\"\n                        >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            {store.map((element) => (\n                                <MenuItem value={element._id} key={element._id}>\n                                    {element.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Toolbar>\n            </AppBar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container } from '@material-ui/core'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container maxWidth=\"lg\">Footer</Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, CssBaseline } from '@material-ui/core'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nconst Layout = ({ children }) => {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Header />\n            <Container\n                maxWidth=\"md\"\n                style={{ height: '100vh', maxHeight: '100%' }}\n            >\n                {children}\n            </Container>\n            <Footer />\n        </React.Fragment>\n    )\n}\n\nLayout.propTypes = {\n    children: PropTypes.children,\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from '../components/Layout'\n\nimport { Container, Typography, makeStyles } from '@material-ui/core/'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '120px',\n    },\n}))\n\nconst HomePage = () => {\n    const classes = useStyles()\n\n    return (\n        <Layout style={{ backgroundColor: '#FFFFEE' }}>\n            <Container maxWidth=\"md\" style={{ textAlign: 'center' }}>\n                <div className={classes.root}>\n                    <Typography variant=\"h2\" gutterBottom>\n                        Store Demo\n                    </Typography>\n\n                    <Typography variant=\"p\" gutterBottom>\n                        Mux-Email Assignment\n                    </Typography>\n                </div>\n            </Container>\n        </Layout>\n    )\n}\n\nexport default HomePage\n","import React, { useEffect, useState } from 'react'\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core'\nimport { useParams } from 'react-router-dom'\nimport api from '../api/api'\n\nconst Store = () => {\n    const { id } = useParams()\n    const [store, setStore] = useState({})\n    const [fields, setFields] = useState([])\n    useEffect(async () => {\n        const result = await api.get(`/store/${id}/`)\n        console.log(result)\n        setStore(result.data)\n        setFields(result.data.fields ? result.data.fields : [])\n    }, [])\n    return (\n        <>\n            <Typography variant=\"h2\" component=\"h1\">\n                {store.name}\n                {console.log(store)}\n            </Typography>\n            <List>\n                {fields.map((element, index) => (\n                    <ListItem button key={element.name}>\n                        <ListItemText>{index + 1}</ListItemText>\n                        <ListItemText>{element.name}</ListItemText>\n                        <ListItemText>{element.type}</ListItemText>\n                        <ListItemText>{element.store}</ListItemText>\n                    </ListItem>\n                ))}\n            </List>\n        </>\n    )\n}\n\nexport default Store\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport StoreComponent from '../components/Store'\nconst Store = () => {\n    return (\n        <Layout>\n            <StoreComponent />\n        </Layout>\n    )\n}\n\nexport default Store\n","import React, { useState, useEffect, useReducer } from 'react'\nimport {\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    TextField,\n    Button,\n    Grid,\n    makeStyles,\n    Typography,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n    IconButton,\n} from '@material-ui/core'\nimport { useParams } from 'react-router-dom'\nimport Layout from '../components/Layout'\nimport api from '../api/api'\n\nconst useStyles = makeStyles({\n    margin: {\n        margin: '5px',\n    },\n})\n\nfunction fieldReducer(state, action) {\n    switch (action.type) {\n        case 'add':\n            return [...state, action.field]\n        case 'remove':\n            // eslint-disable-next-line no-case-declarations\n            const update = [...state]\n            update.splice(action.name, 1)\n            return update\n        default:\n    }\n}\n\nconst StoreAddFieldsForm = () => {\n    const { id } = useParams()\n    const classes = useStyles()\n    const [store, setStore] = useState([])\n\n    const [fields, setFields] = useReducer(fieldReducer, [])\n    const [field, setField] = useState({\n        name: '',\n        type: '',\n    })\n\n    /** const [val, setVal] = useState('')\n\n    const handleChange = (event) => {\n        setVal(event.target.value)\n    } */\n\n    const addField = () => {\n        setFields({ field, type: 'add' })\n        setField({\n            name: '',\n            type: '',\n        })\n    }\n\n    const saveFields = async () => {\n        await api.post(`/store/${id}/fields`, {\n            fields: fields,\n        })\n    }\n\n    useEffect(async () => {\n        const result = await api.get(`/store/${id}`)\n        setStore(result.data)\n        const field = result.data.fields != null ? result.data.fields : []\n        field.forEach((ele) => setFields({ field: ele, type: 'add' }))\n    }, [])\n\n    return (\n        <Layout>\n            <Typography variant=\"h2\" component=\"h1\">\n                {store.name}\n            </Typography>\n            <Grid container className={classes.margin}>\n                <Grid item xs={4} style={{ padding: '5px' }}>\n                    <TextField\n                        variant={'filled'}\n                        fullWidth\n                        InputProps={{\n                            disableUnderline: true,\n                        }}\n                        label={'Field Name'}\n                        placeholder={'Field Name'}\n                        helperText={'*Required'}\n                        value={field.name}\n                        onChange={(event) => {\n                            setField((prevState) => {\n                                return {\n                                    ...prevState,\n                                    name: event.target.value,\n                                }\n                            })\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={4} style={{ padding: '5px' }}>\n                    <FormControl variant=\"outlined\" style={{ width: '100%' }}>\n                        <InputLabel id=\"fieldname-label\">Type</InputLabel>\n                        <Select\n                            labelId=\"fieldname-label\"\n                            id=\"fieldname\"\n                            helperText={'*Required'}\n                            value={field.type}\n                            onChange={(event) => {\n                                setField((prevState) => {\n                                    return {\n                                        ...prevState,\n                                        type: event.target.value,\n                                    }\n                                })\n                            }}\n                            label=\"Type\"\n                        >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            <MenuItem value=\"string\">String</MenuItem>\n                            <MenuItem value=\"number\">Number</MenuItem>\n                            <MenuItem value=\"date\">Date</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={4} style={{ padding: '5px' }}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{\n                            borderRadius: '100%',\n                        }}\n                        onClick={addField}\n                    >\n                        +\n                    </Button>\n                </Grid>\n            </Grid>\n            <List>\n                {fields.map((element, index) => (\n                    <ListItem button key={element.name}>\n                        <ListItemText>{index + 1}</ListItemText>\n                        <ListItemText>{element.name}</ListItemText>\n                        <ListItemText>{element.type}</ListItemText>\n                        <ListItemText>{element.store}</ListItemText>\n                        <ListItemSecondaryAction>\n                            <IconButton\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                                onClick={(e) => {\n                                    setFields({ index, type: 'remove' })\n                                }}\n                            >\n                                &#10006;\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                ))}\n            </List>\n            <Button variant=\"contained\" color=\"primary\" onClick={saveFields}>\n                Save\n            </Button>\n        </Layout>\n    )\n}\n\nexport default StoreAddFieldsForm\n","import React, { useState, useEffect } from 'react'\nimport { Button, Grid, TextField, Typography } from '@material-ui/core'\nimport { useParams } from 'react-router-dom'\nimport Layout from '../components/Layout'\nimport api from '../api/api'\n\nconst CustomerAddForm = () => {\n    const { id } = useParams()\n    const [form, setForm] = useState({})\n    const [fields, setFields] = useState([])\n\n    /* const handleFieldChange = (event) => {\n        const { name, value } = event.target\n        setFields((prevState) => {\n            return {\n                ...prevState,\n                [name]: value,\n            }\n        })\n    } */\n\n    const handleFormChange = (event) => {\n        const { name, value } = event.target\n        setForm((prevState) => {\n            return {\n                ...prevState,\n                [name]: value,\n            }\n        })\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        console.log(form)\n    }\n\n    useEffect(async () => {\n        const result = await api.get(`/store/${id}`)\n        setFields(result.data.fields)\n    }, [])\n\n    return (\n        <Layout>\n            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                <Typography variant=\"h2\" align=\"center\">\n                    Customer Add Form\n                </Typography>\n                <Grid container justify=\"center\">\n                    <Grid item>\n                        <TextField\n                            id=\"name\"\n                            name=\"name\"\n                            label=\"Name\"\n                            variant=\"outlined\"\n                            style={{ margin: '2px' }}\n                            onChange={handleFormChange}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            variant=\"outlined\"\n                            style={{ margin: '2px' }}\n                            onChange={handleFormChange}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            id=\"mobile\"\n                            name=\"mobile\"\n                            label=\"Mobile Number\"\n                            variant=\"outlined\"\n                            style={{ margin: '2px' }}\n                            onChange={handleFormChange}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            id=\"address\"\n                            name=\"address\"\n                            label=\"Address\"\n                            variant=\"outlined\"\n                            style={{ margin: '2px' }}\n                            onChange={handleFormChange}\n                        />\n                    </Grid>\n                </Grid>\n                {fields != null ? (\n                    <Grid container justify=\"center\">\n                        {fields.map((ele) => (\n                            <Grid item key=\"ele.name\">\n                                <TextField\n                                    id={ele.name}\n                                    name={ele.name}\n                                    label={ele.name}\n                                    variant=\"outlined\"\n                                    style={{ margin: '2px' }}\n                                    onChange={handleFormChange}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                ) : (\n                    ' No custom fields'\n                )}\n                <Grid container justify=\"center\">\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Grid>\n            </form>\n        </Layout>\n    )\n}\n\nexport default CustomerAddForm\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/HomePage'\nimport Store from './pages/Store'\nimport StoreAddFieldsForm from './pages/StoreAddFieldsForm'\nimport CustomerAddForm from './pages/CustomerAddForm'\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route path=\"/store/:id/addfields\">\n                    <StoreAddFieldsForm />\n                </Route>\n                <Route path=\"/store/:id/customers\">\n                    <CustomerAddForm />\n                </Route>\n                <Route path=\"/store/:id\">\n                    <Store />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}